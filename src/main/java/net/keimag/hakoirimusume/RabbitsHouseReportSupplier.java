package net.keimag.hakoirimusume;

import com.linecorp.bot.messaging.model.FlexMessage;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.function.Supplier;

public class RabbitsHouseReportSupplier implements Supplier<FlexMessage> {
    private static final Logger log = LoggerFactory.getLogger(RabbitsHouseReportSupplier.class);

    private final String templateJson;
    private final Calendar c = Calendar.getInstance();
    private final SimpleDateFormat cf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    private final BME280 bme280;
    private final DecimalFormat df = new DecimalFormat("0.0");

    public RabbitsHouseReportSupplier(String templateJsonPath, BME280 bme280) throws IOException{
        this.templateJson = Files.readString(Path.of(templateJsonPath));
        this.bme280 = bme280;
    }

    private String getMessage(BME280.BME280Data d) {
        if (d != null) {
            if (d.temperature >= 27.0) {
                return "‰ªä„Åô„ÅêÂä©„Åë„Å¶ÔºÅÁÜ±‰∏≠Áóá„Å´„Å™„Å£„Å°„ÇÉ„ÅÜüòµ";
            } else if (d.temperature >= 26.0) {
                if (d.humidity > 60.0) {
                    return "Êöë„ÅÑü•µÈôêÁïåÔºÅ‰ªä„Åô„Åê„Ç®„Ç¢„Ç≥„É≥ÁÇπ„Åë„Å¶ÔºÅ";
                } else {
                    return "Êöë„Åô„Åé„Å¶„ÇÇ„ÅÜÈôêÁïåÔºÅ„Ç®„Ç¢„Ç≥„É≥ÁÇπ„Åë„Å¶ÔºÅ";
                }
            } else if (d.temperature > 25.0) {
                if (d.humidity > 60.0) {
                    return "Êöë„ÅÑ„Åó„Ç∏„É°„Ç∏„É°„Åó„Åô„ÅéÔºÅ„Ç®„Ç¢„Ç≥„É≥„Ç™„É≥ÔºÅ";
                } else if (40.0 <= d.humidity) {
                    return "Â§ñÂá∫„Åô„Çã„Å™„Çâ„Ç®„Ç¢„Ç≥„É≥ÁÇπ„Åë„Å¶„ÅÑ„Å£„Å¶ÔºÅ";
                } else {
                    return "ËÑ±Ê∞¥ÁóáÁä∂„ÇíÊ∞ó„Å´„Åã„Åë„Å¶„Åª„Åó„ÅÑ„Å™„ÄÇ";
                }
            } else if (d.temperature > 24.0) {
                if (d.humidity >= 70.0) {
                    return "„Ç∏„É°„Ç∏„É°„Åó„Åô„ÅéÔºÅ‰ªä„Åô„ÅêÈô§Êπø„Åó„Å¶ÔºÅ";
                } else if (d.humidity > 60.0) {
                    return "„Ç∏„É°„Ç∏„É°„Åó„Å¶„Çã„Åã„ÇâÁ™ìÈñã„Åë„Å¶„Åª„Åó„ÅÑ„Å™";
                } else if (40.0 <= d.humidity) {
                    return "„Å°„Çá„Å£„Å®Êöë„ÅÑ„Åë„Å©È†ëÂºµ„Çã„Çà„ÄÇ";
                } else {
                    return "ËÑ±Ê∞¥ÁóáÁä∂„ÇíÊ∞ó„Å´„Åã„Åë„Å¶„Åª„Åó„ÅÑ„Å™„ÄÇ";
                }
            } else if (17.0 <= d.temperature) {
                if (d.humidity >= 70.0) {
                    return "„Ç∏„É°„Ç∏„É°„Åó„Åô„Åé„Å¶„ÇãÔºÅ‰ªä„Åô„ÅêÈô§Êπø„Åó„Å¶ÔºÅ";
                } else if (d.humidity > 60.0) {
                    return "„Ç∏„É°„Ç∏„É°„Åó„Å¶„Çã„Åã„ÇâÈô§Êπø„Åó„Å¶„Åª„Åó„ÅÑ„Å™";
                } else if (35.0 <= d.humidity) {
                    return "‰ªä„ÅÆ„Å®„Åì„Çç„ÅØÂø´ÈÅ©„Å†„ÇàÔºÅüòÅüëå";
                } else {
                    return "‰πæÁá•„Åó„Åô„Åé„Å†„Åã„ÇâÂä†ÊπøÂô®„Å§„Åë„Å¶„Åª„Åó„ÅÑ„Å™";
                }
            } else if (d.temperature > 13.0) {
                return "‰ΩìË™øÂ§âÂåñ„ÇíÊ∞ó„Å´„Åã„Åë„Å¶„Åª„Åó„ÅÑ„Å™„ÄÇ";
            } else {
                return "ÂØù„Çã„Å®„Åç„Å´„Éí„Éº„Çø„ÉºÁÇπ„Åë„Å¶„Åª„Åó„ÅÑ„Å™üôè";
            }
        } else {
            return "‰ªä‰ΩïÂ∫¶Ôºü ÈÉ®Â±ã„Å´Êù•„Å¶Á¢∫Ë™ç„Åó„Å¶„Åª„Åó„ÅÑÔºÅ";
        }
    }

    private String getReportJson() {
        String reportJson = templateJson;
        String imageUri = null;
        String currentTime = cf.format(c.getTime());
        BME280.BME280Data bme280Data = this.bme280.getMeasurements();
        String temp = "---", humidity = "---", pressure = "---";
        if (bme280Data != null) {
            temp = df.format(bme280Data.temperature);
            humidity = df.format(bme280Data.humidity);
            pressure = df.format(bme280Data.pressure / 100);  // 1 Pa = 0.01 hPa
            if (bme280Data.temperature >= 27.0 || (bme280Data.temperature >= 26.0 && bme280Data.humidity > 60)) {
                reportJson = reportJson.replace("#FFFFFF", "#DC3545");  // Red frame border
            }
        }
        reportJson = reportJson.replace("{{CurrentTime}}", currentTime);
        reportJson = reportJson.replace("{{Temperature}}", temp);
        reportJson = reportJson.replace("{{Humidity}}", humidity);
        reportJson = reportJson.replace("{{Pressure}}", pressure);
        reportJson = reportJson.replace("{{Message}}", getMessage(bme280Data));
        if (imageUri != null) {
            reportJson = reportJson.replace("https://i.imgur.com/Z5GS685.jpeg", imageUri);
        } else {
            reportJson = reportJson.replace(",\n" +
                    "    \"action\": {\n" +
                    "      \"type\": \"uri\",\n" +
                    "      \"uri\": \"https://i.imgur.com/Z5GS685.jpeg\",\n" +
                    "      \"label\": \"View image at Imgur\"\n" +
                    "    }", "");
        }
        return reportJson;
    }

    public FlexMessage get() {
        return new FlexMessageBuilder().build("Rabbit's House Report", getReportJson());
    }

    public FlexMessage alert() {
        String contents = getReportJson();
        contents = contents.replace("Rabbit's House Report", "Rabbit's House Alert!");
        contents = contents.replace("#1DB446", "#DC3545");
        contents = contents.replace("#FFFFFF", "#DC3545");  // Red frame border
        return new FlexMessageBuilder().build("Rabbit's House Alert!", contents);
    }
}
