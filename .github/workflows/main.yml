name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build bootJar

      - name: Extract version from build.gradle.kts
        id: app_version
        run: |
          VERSION=$(grep '^version = ' build.gradle.kts | awk -F' = ' '{gsub(/"/, "", $2); print $2}')
          echo "Extracted VERSION: $VERSION"
          echo "::set-output name=VERSION::$VERSION"
        shell: bash

      - name: Create Release Tag
        uses: actions/github-script@v6
        with:
          script: |
            const tagName = `v${{ steps.app_version.outputs.VERSION }}`;
            const ref = `refs/tags/${tagName}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: ref,
              sha: context.sha
            });
            return tagName;
          result-encoding: string
        id: create_tag

      - name: Build release assets
        run: |
          mkdir release_assets
          cp build/libs/*.jar release_assets/
          cp -r sensor_server release_assets/
          cp -r RemotePy_Server release_assets/
          cp -r tools release_assets/
          cp src/main/resources/application.yml release_assets/
          zip -r Hakoirimusume-${{ steps.create_tag.outputs.result }}.zip release_assets

      - name: Create Draft Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.result }}
          release_name: Release ${{ steps.create_tag.outputs.result }}
          draft: true
          body: |
            New release ${{ steps.create_tag.outputs.result }}.

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_tag.outputs.upload_url }}
          asset_path: ./Hakoirimusume-${{ steps.create_tag.outputs.result }}.zip
          asset_name: Hakoirimusume-${{ steps.create_tag.outputs.result }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}